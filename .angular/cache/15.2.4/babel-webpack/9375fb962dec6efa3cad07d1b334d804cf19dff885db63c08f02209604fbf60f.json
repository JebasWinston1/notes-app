{"ast":null,"code":"import { map } from 'rxjs';\nimport { Note } from '../models/note.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotesService {\n  constructor(http) {\n    this.http = http;\n  }\n  //* Insert Note \n  insertNote(title, desc) {\n    if (title.length > 0 && desc.length > 0 || title.length > 0 && desc.length === 0 || title.length === 0 && desc.length > 0) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    return this.notes$;\n  }\n  //* Get One Note \n  getNote(id) {\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes/' + id + '.json');\n  }\n  //* Get All Notes \n  getAllNotes() {\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json').pipe(map(data => {\n      let notesArray = [];\n      for (let key in data) {\n        notesArray.push({\n          ...data[key],\n          id: key\n        });\n      }\n      return notesArray;\n    }));\n  }\n  //* Update Note\n  updateNote(title, desc, id) {\n    return this.http.put('https://my-notes-55-default-rtdb.firebaseio.com/notes/' + id + '.json', {\n      title: title,\n      description: desc\n    });\n  }\n}\nNotesService.ɵfac = function NotesService_Factory(t) {\n  return new (t || NotesService)(i0.ɵɵinject(i1.HttpClient));\n};\nNotesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotesService,\n  factory: NotesService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;AACtC,SAASC,IAAI,QAAQ,sBAAsB;;;AAG3C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,UAAU,CAACC,KAAa,EAAEC,IAAY;IACpC,IACGD,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAC,IACnCF,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,KAAK,CAAE,IACtCF,KAAK,CAACE,MAAM,KAAK,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAE,EACvC;MACA,IAAI;QACF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,4DAA4D,EACvF,IAAIT,IAAI,CAACK,KAAK,EAAEC,IAAI,CAAC,CAAC;OACzB,CAAC,OAAOI,CAAM,EAAE;QACfC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;;;IAGlB,OAAO,IAAI,CAACF,MAAM;EACpB;EAEA;EACAK,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAO,wDAAwD,GAAGD,EAAE,GAAG,OAAO,CAAC;EACrG;EAEA;EACAE,WAAW;IACT,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAAS,4DAA4D,CAAC,CACvFE,IAAI,CAAClB,GAAG,CAACmB,IAAI,IAAG;MACf,IAAIC,UAAU,GAAG,EAAE;MACnB,KAAK,IAAIC,GAAG,IAAIF,IAAI,EAAE;QACpBC,UAAU,CAACE,IAAI,CAAC;UAAE,GAAGH,IAAI,CAACE,GAAG,CAAC;UAAEN,EAAE,EAAEM;QAAG,CAAE,CAAC;;MAE5C,OAAOD,UAAU;IACnB,CAAC,CAAC,CAAC;EACP;EAEA;EACAG,UAAU,CAACjB,KAAa,EAAEC,IAAY,EAAEQ,EAAU;IAChD,OAAO,IAAI,CAACX,IAAI,CAACoB,GAAG,CAAC,wDAAwD,GAAGT,EAAE,GAAG,OAAO,EAAE;MAAET,KAAK,EAAEA,KAAK;MAAEmB,WAAW,EAAElB;IAAI,CAAE,CAAC;EACpI;;AA3CWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAwB,SAAZxB,YAAY;AAAA","names":["map","Note","NotesService","constructor","http","insertNote","title","desc","length","notes$","post","e","console","log","getNote","id","get","getAllNotes","pipe","data","notesArray","key","push","updateNote","put","description","factory"],"sourceRoot":"","sources":["/home/user1/Desktop/notes-app/src/app/services/notes.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\n\n@Injectable()\nexport class NotesService {\n  notes: Note[];\n  notes$: Observable<Object>;\n\n  constructor(private http: HttpClient) { }\n\n  //* Insert Note \n  insertNote(title: string, desc: string): Observable<any> {\n    if (\n      (title.length > 0 && desc.length > 0) ||\n      (title.length > 0 && desc.length === 0) ||\n      (title.length === 0 && desc.length > 0)\n    ) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json',\n          new Note(title, desc))\n      } catch (e: any) {\n        console.log(e)\n      }\n    }\n    return this.notes$\n  }\n\n  //* Get One Note \n  getNote(id: string) {\n    return this.http.get<Note>('https://my-notes-55-default-rtdb.firebaseio.com/notes/' + id + '.json')\n  }\n\n  //* Get All Notes \n  getAllNotes() {\n    return this.http.get<Note[]>('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n      .pipe(map(data => {\n        let notesArray = []\n        for (let key in data) {\n          notesArray.push({ ...data[key], id: key })\n        }\n        return notesArray\n      }))\n  }\n\n  //* Update Note\n  updateNote(title: string, desc: string, id: string) {\n    return this.http.put('https://my-notes-55-default-rtdb.firebaseio.com/notes/' + id + '.json', { title: title, description: desc })\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}