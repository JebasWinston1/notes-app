{"ast":null,"code":"import { map, Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class NotesService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.notes = [];\n    this.notes$ = new Observable();\n  }\n  insertNote(title, desc) {\n    if (title.length > 0 && desc.length > 0 || title.length > 0 && desc.length === 0 || title.length === 0 && desc.length > 0) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc));\n        return this.notes$;\n        // this.notes$.subscribe((value) => {\n        //   console.log(value)\n        //   this.router.navigate(['/'])\n        // })\n      } catch (e) {\n        console.log(e);\n        return e;\n      }\n    }\n  }\n  getAllNotes() {\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json').pipe(map(data => {\n      let notesArray = [];\n      for (let key in data) {\n        notesArray.push({\n          ...data[key],\n          id: key\n        });\n      }\n      return notesArray;\n    }));\n  }\n}\nNotesService.ɵfac = function NotesService_Factory(t) {\n  return new (t || NotesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nNotesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotesService,\n  factory: NotesService.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,EAAEC,UAAU,QAAQ,MAAM;AACtC,SAASC,IAAI,QAAQ,sBAAsB;;;;AAG3C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAHpD,UAAK,GAAW,EAAE;IAClB,WAAM,GAAuB,IAAIL,UAAU,EAAE;EAEmB;EAEhEM,UAAU,CAACC,KAAa,EAAEC,IAAY;IACpC,IACGD,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAC,IACnCF,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,KAAK,CAAE,IACtCF,KAAK,CAACE,MAAM,KAAK,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAE,EACvC;MACA,IAAI;QACF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,4DAA4D,EAAE,IAAIV,IAAI,CAACM,KAAK,EAAEC,IAAI,CAAC,CAAC;QACjH,OAAO,IAAI,CAACE,MAAM;QAClB;QACA;QACA;QACA;OAED,CAAC,OAAOE,CAAM,EAAE;QACfC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACd,OAAOA,CAAC;;;EAGd;EAEAG,WAAW;IACT,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAS,4DAA4D,CAAC,CACvFC,IAAI,CAAClB,GAAG,CAACmB,IAAI,IAAG;MACf,IAAIC,UAAU,GAAG,EAAE;MACnB,KAAK,IAAIC,GAAG,IAAIF,IAAI,EAAE;QACpBC,UAAU,CAACE,IAAI,CAAC;UAAE,GAAGH,IAAI,CAACE,GAAG,CAAC;UAAEE,EAAE,EAAEF;QAAG,CAAE,CAAC;;MAE5C,OAAOD,UAAU;IACnB,CAAC,CAAC,CAAC;EACP;;AApCWjB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;AAAA","names":["map","Observable","Note","NotesService","constructor","http","router","insertNote","title","desc","length","notes$","post","e","console","log","getAllNotes","get","pipe","data","notesArray","key","push","id","factory"],"sourceRoot":"","sources":["/home/user1/Desktop/notes-app/src/app/services/notes.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map, Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\n\n@Injectable()\nexport class NotesService {\n  notes: Note[] = [];\n  notes$: Observable<Object> = new Observable()\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  insertNote(title: string, desc: string): Observable<any> {\n    if (\n      (title.length > 0 && desc.length > 0) ||\n      (title.length > 0 && desc.length === 0) ||\n      (title.length === 0 && desc.length > 0)\n    ) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc))\n        return this.notes$\n        // this.notes$.subscribe((value) => {\n        //   console.log(value)\n        //   this.router.navigate(['/'])\n        // })\n\n      } catch (e: any) {\n        console.log(e)\n        return e\n      }\n    }\n  }\n\n  getAllNotes() {\n    return this.http.get<Note[]>('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n      .pipe(map(data => {\n        let notesArray = []\n        for (let key in data) {\n          notesArray.push({ ...data[key], id: key })\n        }\n        return notesArray\n      }))\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}