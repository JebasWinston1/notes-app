{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotesService {\n  constructor(http) {\n    this.http = http;\n    this.notes = [];\n    this.notes$ = new Observable();\n  }\n  insertNote(title, desc) {\n    if (title.length > 0 && desc.length > 0 || title.length > 0 && desc.length === 0 || title.length === 0 && desc.length > 0) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc));\n        this.notes$.subscribe(value => {\n          console.log(value);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n  // getAllNotes() {\n  //   return this.http.get<Note[]>('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n  //     .pipe(map(data => {\n  //       let notesArray = []\n  //       for (let key in data) {\n  //         notesArray.push({ ...data[key], id: key })\n  //       }\n  //       return notesArray\n  //     }))\n  // }\n  getAllNotes() {\n    var header = new HttpHeaders().set('API-Key', 'Jebas');\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', {\n      headers: header\n    });\n  }\n}\nNotesService.ɵfac = function NotesService_Factory(t) {\n  return new (t || NotesService)(i0.ɵɵinject(i1.HttpClient));\n};\nNotesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotesService,\n  factory: NotesService.ɵfac\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAcC,UAAU,QAAQ,MAAM;AACtC,SAASC,IAAI,QAAQ,sBAAsB;;;AAG3C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,UAAK,GAAW,EAAE;IAClB,WAAM,GAAuB,IAAIJ,UAAU,EAAE;EAEL;EAExCK,UAAU,CAACC,KAAa,EAAEC,IAAY;IACpC,IACGD,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAC,IACnCF,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,KAAK,CAAE,IACtCF,KAAK,CAACE,MAAM,KAAK,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAE,EACvC;MACA,IAAI;QACF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,4DAA4D,EAAE,IAAIT,IAAI,CAACK,KAAK,EAAEC,IAAI,CAAC,CAAC;QACjH,IAAI,CAACE,MAAM,CAACE,SAAS,CAAEC,KAAK,IAAI;UAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB,CAAC,CAAC;OACH,CAAC,OAAOG,CAAM,EAAE;QACfF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;;;EAGpB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,WAAW;IACT,IAAIC,MAAM,GAAG,IAAIlB,WAAW,EAAE,CAC3BmB,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;IAC1B,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,4DAA4D,EAAE;MAAEC,OAAO,EAAEH;IAAM,CAAE,CAAC;EACzG;;AAtCWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAmB,SAAZnB,YAAY;AAAA","names":["HttpHeaders","Observable","Note","NotesService","constructor","http","insertNote","title","desc","length","notes$","post","subscribe","value","console","log","e","getAllNotes","header","set","get","headers","factory"],"sourceRoot":"","sources":["/home/user1/Desktop/notes-app/src/app/services/notes.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\n\n@Injectable()\nexport class NotesService {\n  notes: Note[] = [];\n  notes$: Observable<Object> = new Observable()\n\n  constructor(private http: HttpClient) { }\n\n  insertNote(title: string, desc: string) {\n    if (\n      (title.length > 0 && desc.length > 0) ||\n      (title.length > 0 && desc.length === 0) ||\n      (title.length === 0 && desc.length > 0)\n    ) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc))\n        this.notes$.subscribe((value) => {\n          console.log(value)\n        })\n      } catch (e: any) {\n        console.log(e)\n      }\n    }\n  }\n\n  // getAllNotes() {\n  //   return this.http.get<Note[]>('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n  //     .pipe(map(data => {\n  //       let notesArray = []\n  //       for (let key in data) {\n  //         notesArray.push({ ...data[key], id: key })\n  //       }\n  //       return notesArray\n  //     }))\n  // }\n\n  getAllNotes() {\n    var header = new HttpHeaders()\n      .set('API-Key', 'Jebas')\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', { headers: header })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}