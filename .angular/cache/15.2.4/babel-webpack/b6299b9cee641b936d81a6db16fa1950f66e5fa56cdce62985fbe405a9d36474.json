{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ShrinkPipe {\n  transform(value) {\n    if (value.length > 170) {\n      return value.slice(0, 170) + '...';\n    } else {\n      return value;\n    }\n  }\n}\nShrinkPipe.ɵfac = function ShrinkPipe_Factory(t) {\n  return new (t || ShrinkPipe)();\n};\nShrinkPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"shrink\",\n  type: ShrinkPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,UAAU;EACrBC,SAAS,CAACC,KAAa;IACrB,IAAIA,KAAK,CAACC,MAAM,GAAG,GAAG,EAAE;MACtB,OAAOD,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;KACnC,MAAM;MACL,OAAOF,KAAK;;EAEhB;;AAPWF,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;;QAAVA,UAAU;EAAAK;AAAA","names":["ShrinkPipe","transform","value","length","slice","pure"],"sourceRoot":"","sources":["/home/user1/Desktop/notes-app/src/app/pipes/shrink.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shrink',\n})\nexport class ShrinkPipe implements PipeTransform {\n  transform(value: string) {\n    if (value.length > 170) {\n      return value.slice(0, 170) + '...';\n    } else {\n      return value;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}