{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotesService {\n  constructor(http) {\n    this.http = http;\n    this.notes = [];\n    this.notes$ = new Observable();\n  }\n  insertNote(title, desc) {\n    if (title.length > 0 && desc.length > 0 || title.length > 0 && desc.length === 0 || title.length === 0 && desc.length > 0) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc));\n        this.notes$.subscribe(value => {\n          console.log(value);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n  getAllNotes() {\n    // try {\n    //   return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n    // } catch (e: any) {\n    //   console.log(e)\n    // }\n    this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json').subscribe(data => console.log(data));\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json');\n  }\n}\nNotesService.ɵfac = function NotesService_Factory(t) {\n  return new (t || NotesService)(i0.ɵɵinject(i1.HttpClient));\n};\nNotesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotesService,\n  factory: NotesService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAcA,UAAU,QAAQ,MAAM;AACtC,SAASC,IAAI,QAAQ,sBAAsB;;;AAG3C,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,UAAK,GAAW,EAAE;IAClB,WAAM,GAAuB,IAAIJ,UAAU,EAAE;EACL;EACxCK,UAAU,CAACC,KAAa,EAAEC,IAAY;IACpC,IACGD,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAC,IACnCF,KAAK,CAACE,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,KAAK,CAAE,IACtCF,KAAK,CAACE,MAAM,KAAK,CAAC,IAAID,IAAI,CAACC,MAAM,GAAG,CAAE,EACvC;MACA,IAAI;QACF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,4DAA4D,EAAE,IAAIT,IAAI,CAACK,KAAK,EAAEC,IAAI,CAAC,CAAC;QACjH,IAAI,CAACE,MAAM,CAACE,SAAS,CAAEC,KAAK,IAAI;UAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB,CAAC,CAAC;OACH,CAAC,OAAOG,CAAM,EAAE;QACfF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;;;EAGpB;EAEAC,WAAW;IACT;IACA;IACA;IACA;IACA;IACA,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,4DAA4D,CAAC,CAACN,SAAS,CAAEO,IAAS,IAAKL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC,CAAC;IAEvH,OAAO,IAAI,CAACd,IAAI,CAACa,GAAG,CAAC,4DAA4D,CAAC;EAEpF;;AA/BWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;AAAA","names":["Observable","Note","NotesService","constructor","http","insertNote","title","desc","length","notes$","post","subscribe","value","console","log","e","getAllNotes","get","data","factory"],"sourceRoot":"","sources":["/home/user1/Desktop/notes-app/src/app/services/notes.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Note } from '../models/note.model';\n\n@Injectable()\nexport class NotesService {\n  notes: Note[] = [];\n  notes$: Observable<Object> = new Observable()\n  constructor(private http: HttpClient) { }\n  insertNote(title: string, desc: string) {\n    if (\n      (title.length > 0 && desc.length > 0) ||\n      (title.length > 0 && desc.length === 0) ||\n      (title.length === 0 && desc.length > 0)\n    ) {\n      try {\n        this.notes$ = this.http.post('https://my-notes-55-default-rtdb.firebaseio.com/notes.json', new Note(title, desc))\n        this.notes$.subscribe((value) => {\n          console.log(value)\n        })\n      } catch (e: any) {\n        console.log(e)\n      }\n    }\n  }\n\n  getAllNotes() {\n    // try {\n    //   return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n    // } catch (e: any) {\n    //   console.log(e)\n    // }\n    this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json').subscribe((data: any) => console.log(data))\n\n    return this.http.get('https://my-notes-55-default-rtdb.firebaseio.com/notes.json')\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}